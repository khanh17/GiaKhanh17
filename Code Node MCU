Code Node MCU
#include <ESP8266WiFi.h>
#define BLYNK_PRINT Serial    
#include <SPI.h>
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
#include <SimpleTimer.h>
String apiKey = "QMDIQWHAXDOGXLOA";     //  Enter your Write API key from ThingSpeak
 char auth[] = "Se1P3wVyXrNDz2vjAh82stw6hLk9y29q"; 
const char *ssid =  "DATN";     // replace with your wifi ssid and wpa2 key
const char *pass =  "totnghiep2022";
const char* server = "api.thingspeak.com";
 char rdata;
String mystring;
int A, B, C, D ,E,F;
WiFiClient client;
void setup() 
{
      Serial.begin(9600); 
  Blynk.begin(auth, ssid, pass);
       delay(10);
       Serial.println("Connecting to ");
       Serial.println(ssid);
       WiFi.begin(ssid, pass);
      while (WiFi.status() != WL_CONNECTED) 
     {
            delay(500);
            Serial.print(".");
     }
      Serial.println("");
      Serial.println("WiFi connected");
}
void loop() 
{
     Blynk.run(); 
  if(Serial.available() > 0)
  {
    while(Serial.available() > 0)
    {
      rdata=Serial.read();
      mystring = mystring +rdata;
      if(rdata== '\n')
      {
        String a = getvalue(mystring,':',0);
        String b = getvalue(mystring,':',1);
        String c = getvalue(mystring,':',2);
        String d = getvalue(mystring,':',3);
        String e = getvalue(mystring,':',4);
        String f = getvalue(mystring,':',5);
        A = a.toInt();
        B = b.toInt();
        C = c.toInt();
        D = d.toInt();
        E = e.toInt();
         F = f.toInt();
        mystring="";
 if (client.connect(server,80))   
                      { 
                             String postStr = apiKey;
                             postStr +="&field1=";
                             postStr += String(A);
                             postStr +="&field2=";
                             postStr += String(B);
                             postStr +="&field3=";
                             postStr += String(C);
                             postStr +="&field4=";
                             postStr += String(D);
                             postStr +="&field5=";
                             postStr += String(E);
                             postStr +="&field6=";
                             postStr += String(F);
                             postStr += "\r\n\r\n";
                             client.print("POST /update HTTP/1.1\n");
                             client.print("Host: api.thingspeak.com\n");
                             client.print("Connection: close\n");
                             client.print("X-THINGSPEAKAPIKEY: "+apiKey+"\n");
                             client.print("Content-Type: application/x-www-form-urlencoded\n");
                             client.print("Content-Length: ");
                             client.print(postStr.length());
                             client.print("\n\n");
                             client.print(postStr);
                        } 
                        client.stop();
        Blynk.virtualWrite(V0,A);
        Blynk.virtualWrite(V1,B);
        Blynk.virtualWrite(V2,C);
        Blynk.virtualWrite(V3,D);
        Blynk.virtualWrite(V4,E);
        Blynk.virtualWrite(V5,F);
      }
    }
      delay(60);
   }
}
String getvalue(String data, char separator, int index)
{
    int found = 0;
    int strIndex[] = { 0, -1 };
    int maxIndex = data.length() - 1;
    for (int i = 0; i <= maxIndex && found <= index; i++) {
        if (data.charAt(i) == separator || i == maxIndex) {
            found++;
            strIndex[0] = strIndex[1] + 1;
            strIndex[1] = (i == maxIndex) ? i+1 : i;
        }
    }
    return found > index ? data.substring(strIndex[0], strIndex[1]) : "";
}
